@{
    ViewBag.Title = "Thống kê ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- External Libraries -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --warning-gradient: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        --hover-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        --border-radius: 15px;
    }

    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .dashboard-header {
        background: var(--primary-gradient);
        color: white;
        padding: 2rem;
        border-radius: var(--border-radius);
        margin-bottom: 2rem;
        box-shadow: var(--card-shadow);
        position: relative;
        overflow: hidden;
    }

    .dashboard-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 100%;
        height: 200%;
        background: rgba(255, 255, 255, 0.1);
        transform: rotate(45deg);
        transition: all 0.3s ease;
    }

    .dashboard-header:hover::before {
        transform: rotate(45deg) translateX(100%);
    }

    .dashboard-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
        position: relative;
        z-index: 2;
    }

    .dashboard-subtitle {
        font-size: 1.1rem;
        opacity: 0.9;
        margin: 0.5rem 0 0 0;
        position: relative;
        z-index: 2;
    }

    .stats-card {
        background: white;
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: var(--card-shadow);
        transition: all 0.3s ease;
        border: none;
        position: relative;
        overflow: hidden;
    }

    .stats-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--hover-shadow);
    }

    .stats-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--primary-gradient);
    }

    .card-header-custom {
        background: transparent !important;
        border: none !important;
        padding: 0 0 1rem 0;
        margin-bottom: 1rem;
        border-bottom: 2px solid #f8f9fa !important;
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .card-icon {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.2rem;
    }

    .revenue-icon { background: var(--primary-gradient); }
    .review-icon { background: var(--secondary-gradient); }
    .bestseller-icon { background: var(--success-gradient); }
    .summary-icon { background: var(--warning-gradient); }

    .chart-container {
        position: relative;
        height: 350px;
        margin: 1rem 0;
    }

    .summary-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .summary-item {
        background: white;
        padding: 1.5rem;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        text-align: center;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .summary-item:hover {
        transform: translateY(-3px);
        box-shadow: var(--hover-shadow);
    }

    .summary-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
    }

    .summary-item:nth-child(1)::before { background: var(--primary-gradient); }
    .summary-item:nth-child(2)::before { background: var(--secondary-gradient); }
    .summary-item:nth-child(3)::before { background: var(--success-gradient); }
    .summary-item:nth-child(4)::before { background: var(--warning-gradient); }

    .summary-value {
        font-size: 2rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0;
    }

    .summary-label {
        color: #7f8c8d;
        font-size: 0.9rem;
        margin: 0.5rem 0 0 0;
        font-weight: 500;
    }

    .summary-change {
        font-size: 0.8rem;
        font-weight: 600;
        margin-top: 0.25rem;
    }

    .change-positive { color: #27ae60; }
    .change-negative { color: #e74c3c; }

    .filter-section {
        background: white;
        padding: 1.5rem;
        border-radius: var(--border-radius);
        margin-bottom: 2rem;
        box-shadow: var(--card-shadow);
    }

    .filter-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1rem;
    }

    .form-control, .btn {
        border-radius: 8px;
    }

    .btn-primary {
        background: var(--primary-gradient);
        border: none;
        font-weight: 600;
        padding: 0.5rem 1.5rem;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }

    .live-clock {
        background: white;
        padding: 1rem;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        text-align: center;
        margin-bottom: 2rem;
    }

    .clock-time {
        font-size: 1.5rem;
        font-weight: 700;
        color: #2c3e50;
        font-family: 'Courier New', monospace;
    }

    .clock-date {
        color: #7f8c8d;
        font-size: 0.9rem;
        margin-top: 0.25rem;
    }

    @@media (max-width: 768px) {
        .dashboard-title {
            font-size: 2rem;
        }

        .summary-stats {
            grid-template-columns: repeat(2, 1fr);
        }

        .chart-container {
            height: 250px;
        }
    }

    .loading-spinner {
        display: none;
        text-align: center;
        padding: 2rem;
    }

    .spinner-border {
        color: #667eea;
    }
</style>

<div class="container-fluid">
    <!-- Dashboard Header -->
    <div class="dashboard-header">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="dashboard-title">
                    <i class="fas fa-chart-line me-3"></i>
                    Dashboard Thống Kê
                </h1>
                <p class="dashboard-subtitle">Tổng quan hiệu suất kinh doanh và xu hướng thị trường</p>
            </div>
            <div class="col-md-4">
                <div class="live-clock">
                    <div class="clock-time" id="currentTime"></div>
                    <div class="clock-date" id="currentDate"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="filter-section">
        <h5 class="filter-title">
            <i class="fas fa-filter me-2"></i>
            Bộ lọc thống kê
        </h5>
        <div class="row">
            <div class="col-md-3">
                <label class="form-label">Từ ngày:</label>
                <input type="date" class="form-control" id="startDate">
            </div>
            <div class="col-md-3">
                <label class="form-label">Đến ngày:</label>
                <input type="date" class="form-control" id="endDate">
            </div>
            <div class="col-md-3">
                <label class="form-label">Loại thống kê:</label>
                <select class="form-control" id="chartType">
                    <option value="day">Theo ngày</option>
                    <option value="week">Theo tuần</option>
                    <option value="month" selected>Theo tháng</option>
                    <option value="year">Theo năm</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button class="btn btn-primary w-100" onclick="updateCharts()">
                    <i class="fas fa-sync-alt me-2"></i>
                    Cập nhật
                </button>
            </div>
        </div>
    </div>

    <!-- Summary Statistics -->
    <div class="summary-stats">
        <div class="summary-item">
            <div class="summary-value" id="totalRevenue">
                @(((decimal?)ViewBag.TotalRevenue ?? 0).ToString("C0", new System.Globalization.CultureInfo("vi-VN")))
            </div>
            <div class="summary-label">Tổng doanh thu</div>
        </div>

        <div class="summary-item">
            <div class="summary-value" id="totalOrders">
                @((int?)ViewBag.TotalOrders ?? 0)
            </div>
            <div class="summary-label">Tổng đơn hàng</div>
        </div>

        <div class="summary-item">
            <div class="summary-value" id="avgRating">
                @(((decimal?)ViewBag.AvgRating ?? 0).ToString("0.0"))
            </div>
            <div class="summary-label">Đánh giá trung bình</div>
        </div>

        <div class="summary-item">
            <div class="summary-value" id="totalCustomers">
                @((int?)ViewBag.TotalCustomers ?? 0)
            </div>
            <div class="summary-label">Khách hàng</div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="row">
        <!-- Revenue Chart -->
        <div class="col-lg-8 mb-4">
            <div class="stats-card">
                <div class="card-header-custom">
                    <h5 class="card-title">
                        <div class="card-icon revenue-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        Biểu đồ Doanh thu
                    </h5>
                </div>
                <div class="loading-spinner" id="revenueLoading">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                </div>
                <div class="chart-container">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Best Selling Chart -->
        <div class="col-lg-4 mb-4">
            <div class="stats-card">
                <div class="card-header-custom">
                    <h5 class="card-title">
                        <div class="card-icon bestseller-icon">
                            <i class="fas fa-trophy"></i>
                        </div>
                        Sản phẩm bán chạy
                    </h5>
                </div>
                <div class="chart-container">
                    <canvas id="bestSellingChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Review Chart -->
        <div class="col-lg-12 mb-4">
            <div class="stats-card">
                <div class="card-header-custom">
                    <h5 class="card-title">
                        <div class="card-icon review-icon">
                            <i class="fas fa-star"></i>
                        </div>
                        Thống kê Đánh giá
                    </h5>
                </div>
                <div class="chart-container">
                    <canvas id="reviewChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    // Initialize charts
    initializeCharts();

    // Update clock
    updateClock();
    setInterval(updateClock, 1000);

    // Set default date range
    setDefaultDateRange();

    // Add loading animations
    addLoadingAnimations();
});

function updateClock() {
    const now = new Date();
    const timeString = now.toLocaleTimeString('vi-VN');
    const dateString = now.toLocaleDateString('vi-VN', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });

    document.getElementById('currentTime').textContent = timeString;
    document.getElementById('currentDate').textContent = dateString;
}

function setDefaultDateRange() {
    const today = new Date();
    const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());

    document.getElementById('endDate').value = today.toISOString().split('T')[0];
    document.getElementById('startDate').value = lastMonth.toISOString().split('T')[0];
}

function addLoadingAnimations() {
    // Add smooth loading animation for charts
    const cards = document.querySelectorAll('.stats-card');
    cards.forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';

        setTimeout(() => {
            card.style.transition = 'all 0.6s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, index * 200);
    });
}

function initializeCharts() {
    // Enhanced Revenue Chart
    const revenueCtx = document.getElementById('revenueChart')?.getContext('2d');
    if (revenueCtx) {
        new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(ViewBag.StatsLabels),
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: @Html.Raw(ViewBag.StatsData),
                    backgroundColor: 'rgba(102, 126, 234, 0.1)',
                    borderColor: 'rgba(102, 126, 234, 1)',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: 'rgba(102, 126, 234, 1)',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2,
                    pointRadius: 6,
                    pointHoverRadius: 8
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            usePointStyle: true,
                            font: { size: 12, weight: '600' }
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        titleColor: '#fff',
                        bodyColor: '#fff',
                        borderColor: 'rgba(102, 126, 234, 1)',
                        borderWidth: 1,
                        cornerRadius: 8,
                        displayColors: false,
                        callbacks: {
                            label: function(context) {
                                return 'Doanh thu: ' + new Intl.NumberFormat('vi-VN', {
                                    style: 'currency',
                                    currency: 'VND'
                                }).format(context.parsed.y);
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        },
                        ticks: {
                            callback: function(value) {
                                return new Intl.NumberFormat('vi-VN', {
                                    style: 'currency',
                                    currency: 'VND',
                                    minimumFractionDigits: 0
                                }).format(value);
                            }
                        }
                    },
                    x: {
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        }
                    }
                },
                animation: {
                    duration: 2000,
                    easing: 'easeInOutQuart'
                }
            }
        });
    }

    // Enhanced Review Chart
    const reviewCtx = document.getElementById('reviewChart')?.getContext('2d');
    if (reviewCtx) {
        new Chart(reviewCtx, {
            type: 'bar',
            data: {
                labels:@Html.Raw(ViewBag.ReviewLabels),
                datasets: [
                    {
                        label: 'Số lượng đánh giá',
                        data: @Html.Raw(Json.Encode(ViewBag.ReviewData)),
                        backgroundColor: 'rgba(240, 147, 251, 0.8)',
                        borderColor: 'rgba(240, 147, 251, 1)',
                        borderWidth: 2,
                        borderRadius: 8,
                        yAxisID: 'y'
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            usePointStyle: true,
                            font: { size: 12, weight: '600' }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        position: 'left',
                        title: {
                            display: true,
                            text: 'Số lượng đánh giá',
                            font: { weight: '600' }
                        },
                        grid: { color: 'rgba(0, 0, 0, 0.05)' }
                    },
                    y1: {
                        beginAtZero: true,
                        position: 'right',
                        title: {
                            display: true,
                            text: 'Điểm trung bình (1-5)',
                            font: { weight: '600' }
                        },
                        grid: { drawOnChartArea: false },
                        max: 5
                    }
                },
                animation: {
                    duration: 2000,
                    easing: 'easeInOutQuart'
                }
            }
        });
    }

    // Enhanced Best-Selling Chart
    const bestCtx = document.getElementById('bestSellingChart')?.getContext('2d');
    if (bestCtx) {
        new Chart(bestCtx, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Encode(ViewBag.BestSellingLabels)),
                datasets: [{
                    label: 'Số lượng bán',
                    data: @Html.Raw(Json.Encode(ViewBag.BestSellingData)),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 206, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)',
                        'rgba(153, 102, 255, 0.8)',
                        'rgba(255, 159, 64, 0.8)',
                        'rgba(201, 203, 207, 0.8)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(201, 203, 207, 1)'
                    ],
                    borderWidth: 2,
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            usePointStyle: true,
                            font: { size: 11 },
                            padding: 15
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        titleColor: '#fff',
                        bodyColor: '#fff',
                        borderColor: 'rgba(255, 255, 255, 0.2)',
                        borderWidth: 1,
                        cornerRadius: 8,
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((context.parsed / total) * 100).toFixed(1);
                                return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
                            }
                        }
                    }
                },
                animation: {
                    duration: 2000,
                    easing: 'easeInOutQuart'
                }
            }
        });
    }
}

function updateCharts() {
    // Show loading state
    const loadingSpinners = document.querySelectorAll('.loading-spinner');
    loadingSpinners.forEach(spinner => spinner.style.display = 'block');

    // Simulate data refresh
    setTimeout(() => {
        loadingSpinners.forEach(spinner => spinner.style.display = 'none');
        // Here you would typically make an AJAX call to refresh data
        showSuccessMessage('Dữ liệu đã được cập nhật thành công!');
    }, 1500);
}

function showSuccessMessage(message) {
    const alertDiv = document.createElement('div');
    alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed';
    alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    alertDiv.innerHTML = `
        <i class="fas fa-check-circle me-2"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;

    document.body.appendChild(alertDiv);

    setTimeout(() => {
        alertDiv.remove();
    }, 5000);
}
</script>