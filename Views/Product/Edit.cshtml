@model TechStore.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .edit-product-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 20px 0;
    }

    .product-edit-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        background: white;
        overflow: hidden;
    }

    .card-header-custom {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 25px;
        text-align: center;
        border: none;
    }

    .card-header-custom h2 {
        margin: 0;
        font-weight: 600;
        font-size: 1.8rem;
    }

    .image-preview-section {
        background: #f8f9fc;
        border-radius: 10px;
        padding: 20px;
        text-align: center;
        margin-bottom: 20px;
    }

    .image-preview-wrapper {
        position: relative;
        display: inline-block;
        
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    #imagePreview {
        max-width: 100%;
        max-height: 300px;
        border-radius: 10px;
        transition: transform 0.3s ease;
    }

    #imagePreview:hover {
        transform: scale(1.05);
    }

    .form-group-modern {
        margin-bottom: 25px;
       
    }

    .form-label-modern {
        font-weight: 600;
        color: #495057;
        margin-bottom: 8px;
        font-size: 0.95rem;
        display: block;
    }

    .form-control-modern {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 12px 15px;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        box-shadow: none;
    }

    .form-control-modern:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        outline: none;
    }

    .file-input-wrapper {
        position: relative;
        display: inline-block;
        cursor: pointer;
        width: 100%;
    }

    .file-input-custom {
        position: absolute;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .file-input-label {
        display: block;
        padding: 12px 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .file-input-label:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }

    .file-input-label i {
        margin-right: 8px;
    }

    .btn-modern {
        padding: 12px 30px;
        border-radius: 25px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        border: none;
        margin-right: 10px;
    }

    .btn-save {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
    }

    .btn-save:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
        color: white;
    }

    .btn-back {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        color: white;
        text-decoration: none;
    }

    .btn-back:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(108, 117, 125, 0.4);
        color: white;
        text-decoration: none;
    }

    .error-message {
        background: #f8d7da;
        color: #721c24;
        padding: 12px 15px;
        border-radius: 8px;
        border-left: 4px solid #dc3545;
        margin-bottom: 20px;
        animation: slideInDown 0.5s ease;
    }

    

    .form-actions-modern {
        margin-top: 30px;
        padding: 20px 0;
        text-align: center;
        border-top: 1px solid #e9ecef;
    }

    .input-icon {
        position: relative;
    }

    .input-icon i {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        z-index: 2;
    }

    .input-icon .form-control-modern {
        padding-left: 45px;
    }
</style>

<div class="edit-product-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card product-edit-card">
                    <div class="card-header-custom">
                        <h2><i class="fas fa-edit me-2"></i>Chỉnh sửa sản phẩm</h2>
                    </div>

                    <div class="card-body p-4">
                        <!--Thông báo lỗi-->
                        @if (ViewBag.Loi != null)
                        {
                            <div class="error-message">
                                <i class="fas fa-exclamation-triangle me-2"></i>@ViewBag.Loi
                            </div>
                        }

                        <div class="row">
                            <div class="col-lg-4">
                                <div class="image-preview-section">
                                    <h5 class="mb-3">Hình ảnh sản phẩm</h5>
                                    <div class="image-preview-wrapper">
                                        <img id="imagePreview" src="~/Images/@Model.ImagePro" class="img-fluid" alt="Product Image" />
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-8">
                                @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.ProductID)

                                    <div class="form-group-modern">
                                        <label class="form-label-modern">
                                            <i class="fas fa-tag me-2"></i>Tên sản phẩm
                                        </label>
                                        <div class="input-icon">
                                            <i class="fas fa-cube"></i>
                                            @Html.EditorFor(model => model.NamePro, new { htmlAttributes = new { @class = "form-control form-control-modern", @placeholder = "Nhập tên sản phẩm..." } })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.NamePro, "", new { @class = "text-danger small mt-1" })
                                    </div>

                                    <div class="form-group-modern">
                                        <label class="form-label-modern">
                                            <i class="fas fa-align-left me-2"></i>Mô tả sản phẩm
                                        </label>
                                        @Html.TextAreaFor(model => model.DecriptionPro, new { @class = "form-control form-control-modern", rows = 4, @placeholder = "Nhập mô tả chi tiết sản phẩm..." })
                                        @Html.ValidationMessageFor(model => model.DecriptionPro, "", new { @class = "text-danger small mt-1" })
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group-modern">
                                                <label class="form-label-modern">
                                                    <i class="fas fa-dollar-sign me-2"></i>Giá thành sản phẩm
                                                </label>
                                                <div class="input-icon">
                                                    <i class="fas fa-money-bill-wave"></i>
                                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control form-control-modern", @placeholder = "0", @type = "number", @step = "0.01" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger small mt-1" })
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group-modern">
                                                <label class="form-label-modern">
                                                    <i class="fas fa-percentage me-2"></i>Mã giảm giá (%)
                                                </label>
                                                <div class="input-icon">
                                                    <i class="fas fa-percent"></i>
                                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control form-control-modern", @placeholder = "0", @type = "number", @min = "0", @max = "100" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger small mt-1" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group-modern">
                                        <label class="form-label-modern">
                                            <i class="fas fa-list me-2"></i>Thuộc phân loại
                                        </label>
                                        @Html.DropDownList("Category", null, "-- Chọn danh mục --", htmlAttributes: new { @class = "form-control form-control-modern" })
                                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger small mt-1" })
                                    </div>

                                    <div class="form-group-modern">
                                        <label class="form-label-modern">
                                            <i class="fas fa-image me-2"></i>Chọn hình ảnh mới
                                        </label>
                                        <div class="file-input-wrapper">
                                            <input type="file" name="ImagePro" accept="image/*" class="file-input-custom" onchange="previewImage(event)" />
                                            <label class="file-input-label">
                                                <i class="fas fa-cloud-upload-alt"></i>Chọn hình ảnh
                                            </label>
                                        </div>
                                        <small class="text-muted">Định dạng: JPG, PNG, GIF. Kích thước tối đa: 5MB</small>
                                    </div>

                                    <div class="form-actions-modern">
                                        <input type="submit" value="Lưu thay đổi" class="btn btn-modern btn-save" />
                                        @Html.ActionLink("Quay lại", "Index", "", htmlAttributes: new { @class = "btn btn-modern btn-back" })
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function previewImage(event) {
        var input = event.target;
        var reader = new FileReader();

        if (input.files != null && input.files[0]) {
            // Validate file size (5MB max)
            if (input.files[0].size > 5 * 1024 * 1024) {
                alert('Kích thước file quá lớn. Vui lòng chọn file nhỏ hơn 5MB.');
                input.value = '';
                return;
            }

            // Validate file type
            if (!input.files[0].type.match('image.*')) {
                alert('Vui lòng chọn file hình ảnh.');
                input.value = '';
                return;
            }

            reader.readAsDataURL(input.files[0]);

            // Update file input label
            var fileName = input.files[0].name;
            var label = input.nextElementSibling;
            label.innerHTML = '<i class="fas fa-check"></i>' + fileName;
            label.style.background = 'linear-gradient(135deg, #28a745 0%, #20c997 100%)';
        }

        reader.onload = function () {
            var img = document.getElementById('imagePreview');
            img.src = reader.result;
            img.style.display = 'block';

            // Add fade in animation
            img.style.opacity = '0';
            setTimeout(function () {
                img.style.transition = 'opacity 0.5s ease';
                img.style.opacity = '1';
            }, 100);
        };
    }

    // Add form validation feedback
    document.addEventListener('DOMContentLoaded', function () {
        var inputs = document.querySelectorAll('.form-control-modern');
        inputs.forEach(function (input) {
            input.addEventListener('blur', function () {
                if (this.value.trim() !== '') {
                    this.style.borderColor = '#28a745';
                } else {
                    this.style.borderColor = '#e9ecef';
                }
            });
        });
    });
</script>