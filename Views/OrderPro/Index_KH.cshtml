@model IEnumerable<TechStore.Models.OrderPro>
@{
    ViewBag.Title = "Order History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Force full screen */
    body {
        margin: 0 !important;
        padding: 0 !important;
        overflow-x: auto;
    }

    .order-history-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 1rem 0;
        width: 100vw !important;
        margin: 0 !important;
        position: relative;
        left: 50%;
        right: 50%;
        margin-left: -50vw !important;
        margin-right: -50vw !important;
    }

    .page-header {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        text-align: center;
    }

    .page-title {
        color: #2c3e50;
        font-weight: 700;
        font-size: 2.5rem;
        margin: 0;
        background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .orders-card {
        background: white;
        border-radius: 20px;
        padding: 1.5rem;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        overflow: hidden;
        margin: 0;
    }

    .table-responsive {
        border-radius: 15px;
        overflow-x: auto;
        box-shadow: 0 8px 25px rgba(0,0,0,0.08);
    }

    .custom-table {
        width: 100%;
        min-width: 1600px; /* Tăng độ rộng tối thiểu để hiển thị đầy đủ 12 cột */
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 15px;
        overflow: hidden;
        margin: 0;
    }

    .custom-table thead th {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        font-weight: 600;
        padding: 1rem 0.75rem;
        text-align: center;
        border: none;
        font-size: 0.8rem;
        letter-spacing: 0.3px;
        white-space: nowrap;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    /* Định nghĩa độ rộng cụ thể cho từng cột */
    .custom-table th:nth-child(1) { min-width: 80px; }   /* Mã đơn */
    .custom-table th:nth-child(2) { min-width: 110px; }  /* Ngày đặt */
    .custom-table th:nth-child(3) { min-width: 200px; }  /* Địa chỉ */
    .custom-table th:nth-child(4) { min-width: 120px; }  /* Trạng thái */
    .custom-table th:nth-child(5) { min-width: 120px; }  /* Tổng tiền */
    .custom-table th:nth-child(6) { min-width: 110px; }  /* Thanh toán */
    .custom-table th:nth-child(7) { min-width: 110px; }  /* Giao hàng */
    .custom-table th:nth-child(8) { min-width: 140px; }  /* Mã vận đơn */
    .custom-table th:nth-child(9) { min-width: 130px; }  /* TT Thanh toán */
    .custom-table th:nth-child(10) { min-width: 100px; } /* Phí ship */
    .custom-table th:nth-child(11) { min-width: 150px; } /* Khách hàng */
    .custom-table th:nth-child(12) { min-width: 120px; } /* Thao tác */

    .custom-table tbody tr {
        transition: all 0.3s ease;
        border-bottom: 1px solid #e8ecf4;
    }

    .custom-table tbody tr:hover {
        background: linear-gradient(135deg, #f8f9ff 0%, #e8ecf4 100%);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .custom-table tbody td {
        padding: 1rem 0.75rem;
        vertical-align: middle;
        text-align: center;
        border: none;
        color: #555;
        font-weight: 500;
        font-size: 0.85rem;
        line-height: 1.4;
    }

    /* Cho phép xuống dòng cho cột địa chỉ */
    .custom-table tbody td:nth-child(3) {
        white-space: normal;
        word-wrap: break-word;
        text-align: left;
        max-width: 200px;
        padding-left: 1rem;
    }

    /* Cho phép xuống dòng cho tên khách hàng */
    .custom-table tbody td:nth-child(11) {
        white-space: normal;
        word-wrap: break-word;
        max-width: 150px;
    }

    /* Cho phép xuống dòng cho mã vận đơn */
    .custom-table tbody td:nth-child(8) {
        white-space: normal;
        word-wrap: break-word;
        font-family: 'Courier New', monospace;
        font-size: 0.8rem;
        max-width: 140px;
    }

    /* Giữ nguyên single line cho các cột khác */
    .custom-table tbody td:not(:nth-child(3)):not(:nth-child(8)):not(:nth-child(11)) {
        white-space: nowrap;
    }

    .status-badge {
        padding: 0.4rem 0.8rem;
        border-radius: 25px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.3px;
        display: inline-block;
        white-space: nowrap;
    }

    .status-pending {
        background: linear-gradient(45deg, #ffeaa7, #fdcb6e);
        color: #d63031;
    }

    .status-completed {
        background: linear-gradient(45deg, #00b894, #00cec9);
        color: white;
    }

    .status-cancelled {
        background: linear-gradient(45deg, #fd79a8, #e84393);
        color: white;
    }

    .payment-badge {
        padding: 0.3rem 0.6rem;
        border-radius: 20px;
        font-size: 0.7rem;
        font-weight: 600;
        display: inline-block;
        white-space: nowrap;
    }

    .payment-paid {
        background: #d1f2eb;
        color: #00b894;
    }

    .payment-unpaid {
        background: #fdeaea;
        color: #e17055;
    }

    .cancel-btn {
        background: linear-gradient(45deg, #fd79a8, #e84393);
        border: none;
        color: white;
        padding: 0.5rem 0.8rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.75rem;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        position: relative;
        overflow: hidden;
        white-space: nowrap;
        z-index: 10;
    }

    .cancel-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(232, 67, 147, 0.4);
        color: white;
        text-decoration: none;
    }

    .cancel-btn:before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }

    .cancel-btn:hover:before {
        left: 100%;
    }

    .amount-cell {
        font-weight: 700;
        color: #667eea;
        font-size: 0.9rem;
    }

    .customer-name {
        font-weight: 600;
        color: #2d3436;
    }

    .alert-custom {
        background: linear-gradient(135deg, #74b9ff, #0984e3);
        color: white;
        border: none;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        font-weight: 500;
        box-shadow: 0 8px 25px rgba(116, 185, 255, 0.3);
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
    }

    .empty-icon {
        font-size: 4rem;
        color: #ddd;
        margin-bottom: 1rem;
    }

    .empty-text {
        color: #999;
        font-size: 1.2rem;
    }

    /* Custom scrollbar cho table */
    .table-responsive::-webkit-scrollbar {
        height: 8px;
    }

    .table-responsive::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .table-responsive::-webkit-scrollbar-thumb {
        background: linear-gradient(45deg, #667eea, #764ba2);
        border-radius: 10px;
    }

    .table-responsive::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(45deg, #5a67d8, #6b46c1);
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .page-title {
            font-size: 2rem;
        }

        .orders-card {
            padding: 1rem;
            margin: 0 1rem;
        }

        .custom-table {
            min-width: 1400px;
            font-size: 0.75rem;
        }

        .custom-table thead th,
        .custom-table tbody td {
            padding: 0.75rem 0.5rem;
        }
    }

    @@media (max-width: 480px) {
        .order-history-container {
            padding: 0.5rem 0;
        }

        .page-title {
            font-size: 1.5rem;
        }

        .orders-card {
            margin: 0 0.5rem;
            padding: 0.75rem;
        }

        .custom-table {
            min-width: 1200px;
            font-size: 0.7rem;
        }
    }

    /* Animation */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .orders-card {
        animation: fadeInUp 0.8s ease-out;
    }
</style>

<div class="order-history-container">
    <div class="container-fluid px-2">
        <div class="page-header">
            <h1 class="page-title">
                <i class="fas fa-shopping-bag me-3"></i>
                Lịch sử mua hàng
            </h1>
            <p class="text-muted mt-2">Quản lý và theo dõi tất cả đơn hàng của bạn</p>
        </div>

        @if (ViewBag.Error != null)
        {
            <div class="alert alert-custom">
                <i class="fas fa-info-circle me-2"></i>
                @ViewBag.Error
            </div>
        }

        <div class="orders-card">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table custom-table">
                        <thead>
                            <tr>
                                <th><i class="fas fa-hashtag me-1"></i>Mã đơn</th>
                                <th><i class="fas fa-calendar me-1"></i>Ngày đặt</th>
                                <th><i class="fas fa-map-marker-alt me-1"></i>Địa chỉ</th>
                                <th><i class="fas fa-info-circle me-1"></i>Trạng thái</th>
                                <th><i class="fas fa-dollar-sign me-1"></i>Tổng tiền</th>
                                <th><i class="fas fa-credit-card me-1"></i>Thanh toán</th>
                                <th><i class="fas fa-truck me-1"></i>Giao hàng</th>
                                <th><i class="fas fa-check-circle me-1"></i>TT Thanh toán</th>
                                <th><i class="fas fa-shipping-fast me-1"></i>Phí ship</th>
                                <th><i class="fas fa-user me-1"></i>Khách hàng</th>
                                <th><i class="fas fa-cog me-1"></i>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    @Html.HiddenFor(modelItem => item.ID);
                                    <td>@Html.DisplayFor(modelItem => item.TrackingNumber)</td>
                                    <td>@Html.DisplayFor(modelItem => item.DateOrder)</td>
                                    <td>@Html.DisplayFor(modelItem => item.AddressDeliverry)</td>
                                    <td>
                                        <span class="status-badge @(item.Status == "Completed" ? "status-completed" :
             item.Status == "Cancelled" ? "status-cancelled" : "status-pending")">
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </span>
                                    </td>
                                    <td class="amount-cell">@Html.DisplayFor(modelItem => item.TotalAmount)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PaymentMethod)</td>
                                    <td>@Html.DisplayFor(modelItem => item.DeliveryDate)</td>
                                    <td>
                                        <span class="payment-badge @(item.PaymentStatus == "Paid" ? "payment-paid" : "payment-unpaid")">
                                            @Html.DisplayFor(modelItem => item.PaymentStatus)
                                        </span>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.ShippingCost)</td>
                                    <td class="customer-name">@Html.DisplayFor(modelItem => item.Customer.NameCus)</td>
                                    <td>
                                        <span class="cancel-btn" data-tracking="@item.TrackingNumber">Hủy đơn</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <div class="empty-text">
                        Chưa có đơn hàng nào
                    </div>
                    <p class="text-muted mt-2">Hãy bắt đầu mua sắm để xem lịch sử đơn hàng tại đây</p>
                </div>
            }
        </div>
    </div>
</div>

<script>
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function () {
        // Add loading animation for cancel buttons
        const cancelBtns = document.querySelectorAll('.cancel-btn');
        cancelBtns.forEach(btn => {
            btn.addEventListener('click', function (e) {
                const trackingNumber = this.dataset.tracking;
                if (confirm('Bạn có chắc chắn muốn hủy đơn hàng này không?: ' + trackingNumber)) {
                    const originalText = this.innerHTML;
                    this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Đang xử lý...';
                    this.style.pointerEvents = 'none';
                    setTimeout(() => {
                        fetch('@Url.Action("Delete_KH", "OrderPro")', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ id: trackingNumber })
                        }).then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                if (confirm('Đã hủy thành công, nhấn ok để reset trang lại')) {
                                    window.location.href = "@Url.Action("ThongTinCaNhan", "User")";
                                }
                                else
                                    return;
                            }
                            else {
                                if (confirm('Hủy đơn không thành công, nhấn ok để reload lại trang và hủy lại')) {
                                    window.location.href = "@Url.Action("ThongTinCaNhan", "User")";
                                }
                                else {
                                    this.innerHTML = originalText;
                                    this.style.pointerEvents = 'auto';
                                    return;

                                }
                            }
                        }
                        );
                    }, 100);
                }
                else {
                    this.innerHTML = originalText;
                    this.style.pointerEvents = 'auto';
                }
            });
        });
        function AjaxCancel_order() {

        }
        // Smooth horizontal scroll for table
        const tableContainer = document.querySelector('.table-responsive');
        if (tableContainer) {
            let isDown = false;
            let startX;
            let scrollLeft;

            tableContainer.addEventListener('mousedown', (e) => {
                isDown = true;
                tableContainer.style.cursor = 'grabbing';
                startX = e.pageX - tableContainer.offsetLeft;
                scrollLeft = tableContainer.scrollLeft;
            });

            tableContainer.addEventListener('mouseleave', () => {
                isDown = false;
                tableContainer.style.cursor = 'grab';
            });

            tableContainer.addEventListener('mouseup', () => {
                isDown = false;
                tableContainer.style.cursor = 'grab';
            });

            tableContainer.addEventListener('mousemove', (e) => {
                if (!isDown) return;
                e.preventDefault();
                const x = e.pageX - tableContainer.offsetLeft;
                const walk = (x - startX) * 2;
                tableContainer.scrollLeft = scrollLeft - walk;
            });

            // Set initial cursor
            tableContainer.style.cursor = 'grab';
        }
    });
</script>