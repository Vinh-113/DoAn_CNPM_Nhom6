@model IEnumerable<TechStore.Models.Product>
@{
    ViewBag.Title = "Home Page";
}
<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --accent-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        --text-dark: #2d3748;
        --text-light: #4a5568;
        --text-muted: #718096;
        --bg-light: #f8fafc;
        --bg-white: #ffffff;
        --border-light: #e2e8f0;
        --shadow-soft: 0 10px 40px rgba(0,0,0,0.1);
        --shadow-hover: 0 20px 60px rgba(0,0,0,0.15);
        --border-radius: 16px;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        line-height: 1.6;
        color: var(--text-dark);
        background: var(--bg-light);
    }

    /* ===== MAIN CONTAINER ===== */
    .homepage-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 20px;
        background: transparent;
    }

    /* ===== HERO SECTION ===== */
    .hero-section {
        position: relative;
        margin: 40px 0 80px 0;
        border-radius: 24px;
        overflow: hidden;
        height: 500px;
        background: var(--primary-gradient);
        box-shadow: var(--shadow-soft);
    }

    .hero-carousel {
        position: relative;
        width: 100%;
        height: 100%;
    }

    .carousel-wrapper {
        position: relative;
        width: 100%;
        height: 100%;
    }

    .carousel-slide {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        transform: scale(1.1);
    }

        .carousel-slide.active {
            opacity: 1;
            transform: scale(1);
        }

        .carousel-slide img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.8), rgba(118, 75, 162, 0.6));
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2;
    }

    .hero-content {
        text-align: center;
        color: white;
        max-width: 600px;
        padding: 0 20px;
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        margin-bottom: 20px;
        background: linear-gradient(135deg, #fff, #f093fb);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .hero-subtitle {
        font-size: 1.25rem;
        margin-bottom: 30px;
        opacity: 0.9;
        font-weight: 300;
    }

    .hero-cta {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        background: rgba(255,255,255,0.15);
        color: white;
        padding: 15px 30px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255,255,255,0.2);
        transition: all 0.3s ease;
    }

        .hero-cta:hover {
            background: rgba(255,255,255,0.25);
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

    /* Navigation Controls */
    .carousel-nav {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(255,255,255,0.15);
        border: none;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        cursor: pointer;
        z-index: 10;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255,255,255,0.2);
        color: white;
        font-size: 20px;
        transition: all 0.3s ease;
    }

        .carousel-nav:hover {
            background: rgba(255,255,255,0.25);
            transform: translateY(-50%) scale(1.1);
        }

    .carousel-prev {
        left: 30px;
    }

    .carousel-next {
        right: 30px;
    }

    .carousel-indicators {
        position: absolute;
        bottom: 30px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 15px;
        z-index: 10;
    }

    .indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: none;
        background: rgba(255,255,255,0.4);
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .indicator.active {
            background: white;
            transform: scale(1.5);
        }

    /* ===== SECTIONS ===== */
    .section {
        margin-bottom: 80px;
    }

    .section-header {
        text-align: center;
        margin-bottom: 50px;
    }

    .section-badge {
        display: inline-block;
        background: var(--accent-gradient);
        color: white;
        padding: 8px 20px;
        border-radius: 50px;
        font-size: 0.875rem;
        font-weight: 600;
        margin-bottom: 15px;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .section-title {
        font-size: 2.75rem;
        font-weight: 800;
        color: var(--text-dark);
        margin-bottom: 15px;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .section-subtitle {
        font-size: 1.2rem;
        color: var(--text-muted);
        max-width: 600px;
        margin: 0 auto;
        font-weight: 300;
    }

    /* ===== PRODUCTS GRID ===== */
    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 30px;
        margin-bottom: 50px;
    }

    .featured-grid {
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 40px;
    }

    /* ===== PRODUCT CARDS ===== */
    .product-card {
        background: var(--bg-white);
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0,0,0,0.06);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: pointer;
        position: relative;
        border: 1px solid var(--border-light);
    }

        .product-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: var(--shadow-hover);
            border-color: transparent;
        }

    .featured-card {
        background: linear-gradient(135deg, #fff 0%, #f8fafc 100%);
        border: 2px solid transparent;
        background-clip: padding-box;
        position: relative;
    }

        .featured-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: var(--primary-gradient);
            border-radius: var(--border-radius);
            padding: 2px;
            mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
            mask-composite: exclude;
            z-index: -1;
        }

    .product-image-wrapper {
        position: relative;
        width: 100%;
        height: 250px;
        overflow: hidden;
        background: var(--bg-light);
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .product-card:hover .product-image {
        transform: scale(1.1);
    }

    .product-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.9), rgba(118, 75, 162, 0.9));
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        backdrop-filter: blur(10px);
    }

    .product-card:hover .product-overlay {
        opacity: 1;
    }

    .view-details {
        color: white;
        font-weight: 700;
        font-size: 1.1rem;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: flex;
        align-items: center;
        gap: 10px;
        transform: translateY(20px);
        transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .product-card:hover .view-details {
        transform: translateY(0);
    }

    /* Discount Badge */
    .discount-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        background: var(--secondary-gradient);
        color: white;
        padding: 10px 15px;
        border-radius: 25px;
        font-size: 0.875rem;
        font-weight: 700;
        z-index: 5;
        box-shadow: 0 4px 15px rgba(245, 87, 108, 0.4);
        text-align: center;
        min-width: 60px;
    }

    .discount-percent {
        display: block;
        font-size: 1rem;
        line-height: 1;
    }

    .discount-text {
        display: block;
        font-size: 0.7rem;
        opacity: 0.9;
        margin-top: 2px;
    }

    /* Product Info */
    .product-info {
        padding: 25px;
    }

    .product-name {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--text-dark);
        margin-bottom: 15px;
        line-height: 1.4;
    }

    .price-container {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .product-price {
        margin: 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .price-current, .price-value {
        font-size: 1.5rem;
        font-weight: 800;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .price-original {
        font-size: 1.1rem;
        color: var(--text-muted);
        text-decoration: line-through;
        font-weight: 500;
    }

    .currency {
        font-size: 1.2rem;
        color: var(--text-muted);
        font-weight: 600;
    }

    /* ===== FEATURED SECTION SPECIAL STYLING ===== */
    .featured-section {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05), rgba(118, 75, 162, 0.05));
        padding: 60px 0;
        border-radius: 24px;
        margin: 80px 0;
    }

    /* ===== EMPTY STATE ===== */
    .empty-state {
        text-align: center;
        padding: 80px 20px;
        color: var(--text-muted);
    }

    .empty-icon {
        font-size: 5rem;
        margin-bottom: 30px;
        opacity: 0.6;
    }

    .empty-state h3 {
        font-size: 1.75rem;
        margin-bottom: 15px;
        color: var(--text-dark);
        font-weight: 700;
    }

    .empty-state p {
        font-size: 1.1rem;
        max-width: 500px;
        margin: 0 auto;
    }

    /* ===== LOADING STATE ===== */
    .loading-spinner {
        display: inline-block;
        width: 40px;
        height: 40px;
        border: 4px solid rgba(102, 126, 234, 0.1);
        border-left: 4px solid #667eea;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* ===== ANIMATIONS ===== */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideInLeft {
        from {
            opacity: 0;
            transform: translateX(-50px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @@keyframes slideInRight {
        from {
            opacity: 0;
            transform: translateX(50px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .fade-in-up {
        animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .slide-in-left {
        animation: slideInLeft 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .slide-in-right {
        animation: slideInRight 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    /* ===== RESPONSIVE DESIGN ===== */
    @@media (max-width: 1024px) {
        .homepage-container {
            padding: 0 15px;
        }

        .hero-title {
            font-size: 2.75rem;
        }

        .section-title {
            font-size: 2.25rem;
        }
    }

    @@media (max-width: 768px) {
        .hero-section {
            height: 350px;
            margin: 20px 0 60px 0;
        }

        .hero-title {
            font-size: 2.25rem;
        }

        .hero-subtitle {
            font-size: 1.1rem;
        }

        .carousel-nav {
            width: 50px;
            height: 50px;
            font-size: 16px;
        }

        .carousel-prev {
            left: 15px;
        }

        .carousel-next {
            right: 15px;
        }

        .products-grid, .featured-grid {
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
        }

        .section-title {
            font-size: 2rem;
        }

        .product-image-wrapper {
            height: 220px;
        }
    }

    @@media (max-width: 480px) {
        .hero-section {
            height: 300px;
        }

        .hero-title {
            font-size: 1.875rem;
        }

        .products-grid, .featured-grid {
            grid-template-columns: 1fr;
        }

        .section-title {
            font-size: 1.75rem;
        }

        .hero-cta {
            padding: 12px 24px;
            font-size: 0.9rem;
        }
    }

    /* ===== ACCESSIBILITY ===== */
    @@media (prefers-reduced-motion: reduce) {
        .carousel-slide,
        .product-image,
        .product-card,
        .hero-cta,
        .carousel-nav,
        .indicator {
            transition: none;
        }

        .loading-spinner {
            animation: none;
        }
    }

    /* Focus states for accessibility */
    .product-card:focus,
    .hero-cta:focus,
    .carousel-nav:focus,
    .indicator:focus {
        outline: 3px solid #667eea;
        outline-offset: 2px;
    }
</style>

<main class="homepage-container">
    <!-- Hero Carousel Section -->
    <section class="hero-section" aria-label="Bannières promotionnelles">
        <div class="hero-carousel"
             onmouseover="carouselController.pause()"
             onmouseout="carouselController.resume()">

            <div class="carousel-wrapper" id="carousel-wrapper">
                <div class="carousel-slide active">
                    <img src="https://images.unsplash.com/photo-1441986300917-64674bd600d8?w=1200&h=500&fit=crop" alt="Promotion spéciale iPad" loading="lazy" />
                </div>
                <div class="carousel-slide">
                    <img src="https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=1200&h=500&fit=crop" alt="Nouveaux smartphones" loading="lazy" />
                </div>
                <div class="carousel-slide">
                    <img src="https://images.unsplash.com/photo-1498049794561-7780e7231661?w=1200&h=500&fit=crop" alt="Accessoires high-tech" loading="lazy" />
                </div>
            </div>

            <div class="hero-overlay">
                <div class="hero-content">
                    <h1 class="hero-title">TechStore</h1>
                    <p class="hero-subtitle">Khám phá thế giới công nghệ tuyệt vời với những sản phẩm chất lượng cao</p>
                    <a href="#products" class="hero-cta">
                        <i class="fas fa-shopping-bag"></i>
                        Khám phá ngay
                    </a>
                </div>
            </div>

            <!-- Navigation Controls -->
            <button class="carousel-nav carousel-prev"
                    onclick="carouselController.moveSlide(-1)"
                    aria-label="Image précédente">
                <i class="fas fa-chevron-left"></i>
            </button>
            <button class="carousel-nav carousel-next"
                    onclick="carouselController.moveSlide(1)"
                    aria-label="Image suivante">
                <i class="fas fa-chevron-right"></i>
            </button>

            <!-- Indicators -->
            <div class="carousel-indicators" role="tablist" aria-label="Sélection de slide">
                <button class="indicator active"
                        onclick="carouselController.goToSlide(0)"
                        aria-label="Aller au slide 1"></button>
                <button class="indicator"
                        onclick="carouselController.goToSlide(1)"
                        aria-label="Aller au slide 2"></button>
                <button class="indicator"
                        onclick="carouselController.goToSlide(2)"
                        aria-label="Aller au slide 3"></button>
            </div>
        </div>
    </section>

    <!-- Featured Products Section -->
    <section class="section featured-section" aria-labelledby="featured-title">
        <div class="section-header">
            <span class="section-badge">Nổi bật</span>
            <h2 id="featured-title" class="section-title">🌟 Sản phẩm nổi bật</h2>
            <p class="section-subtitle">Những sản phẩm được yêu thích nhất từ khách hàng</p>
        </div>

        <div class="products-grid featured-grid">
            <article class="product-card featured-card"
                     onclick="navigateToProduct('@Url.Action("Details", "CustomerPro", new { id = 1 })')"
                     tabindex="0"
                     role="button"
                     onkeypress="handleCardKeyPress(event, '@Url.Action("Details", "CustomerPro", new { id = 1 })')">
                <div class="product-image-wrapper">
                    <img src="https://images.unsplash.com/photo-1544244015-0df4b3ffc6b0?w=400&h=300&fit=crop" alt="iPad Pro - Tablet cao cấp" class="product-image" loading="lazy" />
                    <div class="product-overlay">
                        <span class="view-details">
                            <i class="fas fa-eye"></i>
                            Xem chi tiết
                        </span>
                    </div>
                </div>
                <div class="product-info">
                    <h3 class="product-name">iPad Pro</h3>
                    <p class="product-price">
                        <span class="price-value">8.000.000</span>
                        <span class="currency">₫</span>
                    </p>
                </div>
            </article>

            <article class="product-card featured-card"
                     onclick="navigateToProduct('@Url.Action("Details", "CustomerPro", new { id = 2 })')"
                     tabindex="0"
                     role="button"
                     onkeypress="handleCardKeyPress(event, '@Url.Action("Details", "CustomerPro", new { id = 2 })')">
                <div class="product-image-wrapper">
                    <img src="https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=300&fit=crop" alt="Tai nghe không dây cao cấp" class="product-image" loading="lazy" />
                    <div class="product-overlay">
                        <span class="view-details">
                            <i class="fas fa-eye"></i>
                            Xem chi tiết
                        </span>
                    </div>
                </div>
                <div class="product-info">
                    <h3 class="product-name">Tai nghe Premium</h3>
                    <p class="product-price">
                        <span class="price-value">400.000</span>
                        <span class="currency">₫</span>
                    </p>
                </div>
            </article>

            <article class="product-card featured-card"
                     onclick="navigateToProduct('@Url.Action("Details", "CustomerPro", new { id = 3 })')"
                     tabindex="0"
                     role="button"
                     onkeypress="handleCardKeyPress(event, '@Url.Action("Details", "CustomerPro", new { id = 3 })')">
                <div class="product-image-wrapper">
                    <img src="https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=400&h=300&fit=crop" alt="Smartphone Android mới nhất" class="product-image" loading="lazy" />
                    <div class="product-overlay">
                        <span class="view-details">
                            <i class="fas fa-eye"></i>
                            Xem chi tiết
                        </span>
                    </div>
                </div>
                <div class="product-info">
                    <h3 class="product-name">Smartphone Pro</h3>
                    <p class="product-price">
                        <span class="price-value">3.000.000</span>
                        <span class="currency">₫</span>
                    </p>
                </div>
            </article>
        </div>
    </section>

    <!-- All Products Section -->
    <section class="section" id="products" aria-labelledby="products-title">
        <div class="section-header">
            <span class="section-badge">Sản phẩm</span>
            <h2 id="products-title" class="section-title">📱 Tất cả sản phẩm</h2>
            <p class="section-subtitle">Khám phá bộ sưu tập công nghệ đa dạng và chất lượng cao</p>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="products-grid">
                @foreach (var item in Model)
                {
                    <article class="product-card"
                             onclick="navigateToProduct('@Url.Action("Details", "CustomerPro", new { id = item.ProductID })')"
                             tabindex="0"
                             role="button"
                             onkeypress="handleCardKeyPress(event, '@Url.Action("Details", "CustomerPro", new { id = item.ProductID })')">

                        <div class="product-image-wrapper">
                            @if (item.Discount > 0)
                            {
                                <div class="discount-badge">
                                    <span class="discount-percent">-@item.Discount%</span>
                                    <span class="discount-text">GIẢM GIÁ</span>
                                </div>
                            }
                            <img src="~/Images/@item.ImagePro"
                                 alt="@item.NamePro - Sản phẩm công nghệ"
                                 class="product-image"
                                 loading="lazy" />
                            <div class="product-overlay">
                                <span class="view-details">
                                    <i class="fas fa-eye"></i>
                                    Xem chi tiết
                                </span>
                            </div>
                        </div>

                        <div class="product-info">
                            <h3 class="product-name">@item.NamePro</h3>
                            <div class="price-container">
                                @if (item.Discount > 0)
                                {
                                    var originalPrice = item.Price / (1 - (decimal)item.Discount / 100);
                                    <p class="product-price">
                                        <span class="price-original">@((decimal)originalPrice).ToString("N0")₫</span>
                                        <span class="price-current">@((decimal)item.Price).ToString("N0")₫</span>
                                    </p>
                                }
                                else
                                {
                                    <p class="product-price">
                                        <span class="price-current">@(decimal.TryParse(item.Price.ToString(), out decimal price) ? price.ToString("N0") : item.Price) ₫</span>
                                    </p>
                                }
                            </div>
                        </div>
                    </article>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">📦</div>
                <h3>Không có sản phẩm nào</h3>
                <p>Hiện tại chúng tôi đang cập nhật sản phẩm mới. Vui lòng quay lại sau!</p>
            </div>
        }
    </section>
</main>

<script>
    // ===== MODERN CAROUSEL CONTROLLER =====
    const carouselController = {
        currentIndex: 0,
        slides: null,
        indicators: null,
        autoPlayInterval: null,
        isPlaying: true,
        touchStartX: 0,
        touchEndX: 0,

        init() {
            this.slides = document.querySelectorAll('.carousel-slide');
            this.indicators = document.querySelectorAll('.indicator');
            if (this.slides.length === 0) return;

            this.updateSlide();
            this.startAutoPlay();
            this.setupKeyboardNavigation();
            this.setupTouchNavigation();
            this.setupIntersectionObserver();
            this.setupIndicatorListeners();
            this.setupControlButtons();
        },

        updateSlide() {
            // Update slides with smooth transition
            this.slides.forEach((slide, index) => {
                slide.classList.toggle('active', index === this.currentIndex);
                slide.setAttribute('aria-hidden', index !== this.currentIndex);
            });

            // Update indicators
            this.indicators.forEach((indicator, index) => {
                indicator.classList.toggle('active', index === this.currentIndex);
                indicator.setAttribute('aria-selected', index === this.currentIndex);
            });

            // Update carousel position if using transform method
            const carousel = document.querySelector('.carousel-container');
            if (carousel) {
                carousel.style.transform = `translateX(-${this.currentIndex * 100}%)`;
            }

            // Dispatch custom event
            this.dispatchSlideChange();
        },

        nextSlide() {
            this.currentIndex = (this.currentIndex + 1) % this.slides.length;
            this.updateSlide();
        },

        prevSlide() {
            this.currentIndex = this.currentIndex === 0 ? this.slides.length - 1 : this.currentIndex - 1;
            this.updateSlide();
        },

        goToSlide(index) {
            if (index >= 0 && index < this.slides.length) {
                this.currentIndex = index;
                this.updateSlide();
            }
        },

        startAutoPlay() {
            if (this.autoPlayInterval) this.stopAutoPlay();
            this.autoPlayInterval = setInterval(() => {
                if (this.isPlaying) {
                    this.nextSlide();
                }
            }, 5000); // 5 seconds interval
        },

        stopAutoPlay() {
            if (this.autoPlayInterval) {
                clearInterval(this.autoPlayInterval);
                this.autoPlayInterval = null;
            }
        },

        toggleAutoPlay() {
            this.isPlaying = !this.isPlaying;
            const playBtn = document.querySelector('.play-pause-btn');
            if (playBtn) {
                playBtn.textContent = this.isPlaying ? '⏸️' : '▶️';
                playBtn.setAttribute('aria-label', this.isPlaying ? 'Pause slideshow' : 'Play slideshow');
            }
        },

        setupKeyboardNavigation() {
            document.addEventListener('keydown', (e) => {
                if (e.target.closest('.carousel')) {
                    switch (e.key) {
                        case 'ArrowLeft':
                            e.preventDefault();
                            this.prevSlide();
                            break;
                        case 'ArrowRight':
                            e.preventDefault();
                            this.nextSlide();
                            break;
                        case ' ':
                            e.preventDefault();
                            this.toggleAutoPlay();
                            break;
                        case 'Home':
                            e.preventDefault();
                            this.goToSlide(0);
                            break;
                        case 'End':
                            e.preventDefault();
                            this.goToSlide(this.slides.length - 1);
                            break;
                    }
                }
            });
        },

        setupTouchNavigation() {
            const carousel = document.querySelector('.carousel');
            if (!carousel) return;

            carousel.addEventListener('touchstart', (e) => {
                this.touchStartX = e.changedTouches[0].screenX;
            }, { passive: true });

            carousel.addEventListener('touchend', (e) => {
                this.touchEndX = e.changedTouches[0].screenX;
                this.handleSwipe();
            }, { passive: true });

            // Mouse drag support
            let isMouseDown = false;
            let startX = 0;

            carousel.addEventListener('mousedown', (e) => {
                isMouseDown = true;
                startX = e.clientX;
                carousel.style.cursor = 'grabbing';
            });

            carousel.addEventListener('mousemove', (e) => {
                if (!isMouseDown) return;
                e.preventDefault();
            });

            carousel.addEventListener('mouseup', (e) => {
                if (!isMouseDown) return;
                isMouseDown = false;
                carousel.style.cursor = 'grab';

                const endX = e.clientX;
                const diff = startX - endX;

                if (Math.abs(diff) > 50) {
                    if (diff > 0) {
                        this.nextSlide();
                    } else {
                        this.prevSlide();
                    }
                }
            });

            carousel.addEventListener('mouseleave', () => {
                isMouseDown = false;
                carousel.style.cursor = 'grab';
            });
        },

        handleSwipe() {
            const swipeThreshold = 50;
            const diff = this.touchStartX - this.touchEndX;

            if (Math.abs(diff) > swipeThreshold) {
                if (diff > 0) {
                    this.nextSlide();
                } else {
                    this.prevSlide();
                }
            }
        },

        setupIntersectionObserver() {
            const carousel = document.querySelector('.carousel');
            if (!carousel) return;

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        if (!this.isPlaying) {
                            this.isPlaying = true;
                            this.startAutoPlay();
                        }
                    } else {
                        this.isPlaying = false;
                        this.stopAutoPlay();
                    }
                });
            }, { threshold: 0.5 });

            observer.observe(carousel);
        },

        setupIndicatorListeners() {
            this.indicators.forEach((indicator, index) => {
                indicator.addEventListener('click', () => {
                    this.goToSlide(index);
                });

                indicator.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        this.goToSlide(index);
                    }
                });
            });
        },

        setupControlButtons() {
            const prevBtn = document.querySelector('.carousel-prev');
            const nextBtn = document.querySelector('.carousel-next');
            const playPauseBtn = document.querySelector('.play-pause-btn');

            if (prevBtn) {
                prevBtn.addEventListener('click', () => this.prevSlide());
            }

            if (nextBtn) {
                nextBtn.addEventListener('click', () => this.nextSlide());
            }

            if (playPauseBtn) {
                playPauseBtn.addEventListener('click', () => this.toggleAutoPlay());
            }

            // Pause on hover
            const carousel = document.querySelector('.carousel');
            if (carousel) {
                carousel.addEventListener('mouseenter', () => {
                    this.stopAutoPlay();
                });

                carousel.addEventListener('mouseleave', () => {
                    if (this.isPlaying) {
                        this.startAutoPlay();
                    }
                });
            }
        },

        dispatchSlideChange() {
            const event = new CustomEvent('slideChange', {
                detail: {
                    currentIndex: this.currentIndex,
                    currentSlide: this.slides[this.currentIndex]
                }
            });
            document.dispatchEvent(event);
        },

        // Public API methods
        destroy() {
            this.stopAutoPlay();

            // Remove event listeners
            const carousel = document.querySelector('.carousel');
            if (carousel) {
                carousel.replaceWith(carousel.cloneNode(true));
            }

            // Reset properties
            this.currentIndex = 0;
            this.slides = null;
            this.indicators = null;
            this.isPlaying = true;
        },

        pause() {
            this.isPlaying = false;
            this.stopAutoPlay();
        },

        play() {
            this.isPlaying = true;
            this.startAutoPlay();
        },

        getCurrentSlide() {
            return this.slides[this.currentIndex];
        },

        getSlideCount() {
            return this.slides.length;
        }
    };

    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            carouselController.init();
        });
    } else {
        carouselController.init();
    }

    // Export for module use
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = carouselController;
    }
</script>