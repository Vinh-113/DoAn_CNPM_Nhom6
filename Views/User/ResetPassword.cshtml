@model TechStore.Models.Customer
@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Views/Shared/_LogSignLayout.cshtml";
}
<link rel="stylesheet" href="~/Content/bootstrap.min.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<style>
    :root {
        --primary-color: #6366f1;
        --primary-dark: #4f46e5;
        --success-color: #10b981;
        --danger-color: #ef4444;
        --warning-color: #f59e0b;
        --text-color: #1f2937;
        --text-muted: #6b7280;
        --border-color: #e5e7eb;
        --bg-light: #f8fafc;
    }

    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px 0;
    }

    .reset-container {
        max-width: 480px;
        width: 100%;
        margin: 0 auto;
    }

    .card {
        border: none;
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.95);
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        padding: 2rem;
        text-align: center;
        border: none;
    }

        .card-header h2 {
            margin: 0;
            font-weight: 600;
            font-size: 1.75rem;
        }

        .card-header .subtitle {
            margin-top: 0.5rem;
            opacity: 0.9;
            font-size: 0.95rem;
        }

    .card-body {
        padding: 2.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
        position: relative;
    }

    .form-label {
        font-weight: 600;
        color: var(--text-color);
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-control {
        border: 2px solid var(--border-color);
        border-radius: 12px;
        padding: 0.875rem 1rem;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: var(--bg-light);
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
            background: white;
        }

        .form-control.is-invalid {
            border-color: var(--danger-color);
            background-image: none;
        }

    .invalid-feedback {
        display: block;
        margin-top: 0.5rem;
        color: var(--danger-color);
        font-size: 0.875rem;
        font-weight: 500;
    }

    .alert {
        border: none;
        border-radius: 12px;
        padding: 1rem 1.25rem;
        margin-bottom: 1.5rem;
        font-weight: 500;
    }

    .alert-danger {
        background: rgba(239, 68, 68, 0.1);
        color: var(--danger-color);
        border-left: 4px solid var(--danger-color);
    }

    .alert-success {
        background: rgba(16, 185, 129, 0.1);
        color: var(--success-color);
        border-left: 4px solid var(--success-color);
    }

    .btn-submit {
        background: linear-gradient(135deg, var(--success-color), #059669);
        border: none;
        border-radius: 12px;
        padding: 0.875rem 2rem;
        font-size: 1.1rem;
        font-weight: 600;
        color: white;
        width: 100%;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
            background: linear-gradient(135deg, #059669, #047857);
        }

        .btn-submit:active {
            transform: translateY(0);
        }

    .password-strength {
        margin-top: 0.75rem;
    }

    .strength-label {
        font-size: 0.875rem;
        font-weight: 500;
        color: var(--text-muted);
        margin-bottom: 0.5rem;
    }

    .strength-bar {
        height: 6px;
        background: var(--border-color);
        border-radius: 3px;
        overflow: hidden;
        position: relative;
    }

    .strength-progress {
        height: 100%;
        width: 1%;
        background: var(--danger-color);
        border-radius: 3px;
        transition: all 0.3s ease;
        position: relative;
    }

        .strength-progress::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            animation: shimmer 2s infinite;
        }

    @@keyframes shimmer {
        0% {
            transform: translateX(-100%);
        }

        100% {
            transform: translateX(100%);
        }
    }

    .card-footer {
        background: var(--bg-light);
        padding: 1.5rem 2.5rem;
        text-align: center;
        border: none;
        color: var(--text-muted);
    }

        .card-footer a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

            .card-footer a:hover {
                color: var(--primary-dark);
                text-decoration: underline;
            }

    .icon {
        width: 18px;
        height: 18px;
    }

    @@media (max-width: 576px) {
        .card-body {
            padding: 2rem 1.5rem;
        }

        .card-header {
            padding: 1.5rem;
        }

        .card-footer {
            padding: 1.25rem 1.5rem;
        }
    }

    .floating-shapes {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: -1;
    }

    .shape {
        position: absolute;
        opacity: 0.1;
        animation: float 20s infinite linear;
    }

        .shape:nth-child(1) {
            top: 20%;
            left: 10%;
            width: 80px;
            height: 80px;
            background: white;
            border-radius: 50%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            top: 60%;
            right: 15%;
            width: 60px;
            height: 60px;
            background: white;
            transform: rotate(45deg);
            animation-delay: 5s;
        }

        .shape:nth-child(3) {
            bottom: 30%;
            left: 20%;
            width: 40px;
            height: 40px;
            background: white;
            clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
            animation-delay: 10s;
        }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0px) rotate(0deg);
        }

        50% {
            transform: translateY(-20px) rotate(180deg);
        }
    }
</style>
<body>
    <div class="floating-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>

    <div class="reset-container">
        <div class="card">
            <div class="card-header">
                <h2><i class="fas fa-key me-2"></i>Đặt lại mật khẩu</h2>
                <div class="subtitle">Tạo mật khẩu mới an toàn cho tài khoản của bạn</div>
            </div>
            <div class="card-body">
                <!-- Error Alert -->
                @if (ViewBag.Error != null)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        @ViewBag.Error
                    </div>
                }
                else if (ViewBag.Success != null)
                {
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle me-2"></i>
                        @ViewBag.Success
                    </div>
                }

                @using (Html.BeginForm("ResetPassword", "User", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-user icon"></i>
                            Tên người dùng (tên khách hàng)
                        </label>
                        @Html.TextBox("NameCus", null, new { @class = "form-control", required = "required", placeholder = "Nhập tên của bạn vào" })
                        <div class="invalid-feedback">
                            <i class="fas fa-exclamation-circle me-1"></i>
                            Nhập tên vào.
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-lock icon"></i>
                            Nhập mật khẩu mới
                        </label>
                        @Html.Password("PassCus", null, new { @class = "form-control", required = "required", placeholder = "Nhập mật khẩu mới của bạn vào", onkeyup = "validatePassword()" })
                        <div class="invalid-feedback">
                            <i class="fas fa-exclamation-circle me-1"></i>
                            Phải nhập mật khẩu
                        </div>

                        <div class="password-strength">
                            <div class="strength-label">Độ mạnh mật khẩu</div>
                            <div class="strength-bar">
                                <div class="strength-progress" id="powerPoint"></div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <input type="submit" class="btn-submit" value="Đặt lại mật khẩu" />
                    </div>
                }
            </div>
            <div class="card-footer">
                <i class="fas fa-lightbulb me-1"></i>
                Nhớ mật khẩu rồi ư?
                <a href="@Url.Action("DangNhap", "User")">
                   Đăng nhập
                </a>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        function validatePassword() {
            var password = document.getElementById("PassCus").value;
            var powerPoint = document.getElementById("powerPoint");

            var minLength = 8;
            var hasUpperCase = /[A-Z]/.test(password);
            var hasLowerCase = /[a-z]/.test(password);
            var hasNumber = /[0-9]/.test(password);
            var strength = 0;

            if (password.length >= minLength) strength += 1;
            if (hasUpperCase) strength += 1;
            if (hasLowerCase) strength += 1;
            if (hasNumber) strength += 1;

            switch (strength) {
                case 1:
                    powerPoint.style.width = "25%";
                    powerPoint.style.background = "linear-gradient(90deg, #ef4444, #dc2626)";
                    break;
                case 2:
                    powerPoint.style.width = "50%";
                    powerPoint.style.background = "linear-gradient(90deg, #f59e0b, #d97706)";
                    break;
                case 3:
                    powerPoint.style.width = "75%";
                    powerPoint.style.background = "linear-gradient(90deg, #eab308, #ca8a04)";
                    break;
                case 4:
                    powerPoint.style.width = "100%";
                    powerPoint.style.background = "linear-gradient(90deg, #10b981, #059669)";
                    break;
                default:
                    powerPoint.style.width = "1%";
                    powerPoint.style.background = "linear-gradient(90deg, #ef4444, #dc2626)";
                    break;
            }
        }

        // Form validation for MVC form
        var form = document.querySelector('form');
        if (form) {
            form.addEventListener('submit', function(event) {
                var isValid = true;

                // Validate all required fields
                var requiredFields = form.querySelectorAll('[required]');
                requiredFields.forEach(function(field) {
                    if (!field.value.trim()) {
                        field.classList.add('is-invalid');
                        isValid = false;
                    } else {
                        field.classList.remove('is-invalid');
                    }
                });

                if (!isValid) {
                    event.preventDefault();
                }
            });
        }

        // Real-time validation
        document.querySelectorAll('.form-control').forEach(function(input) {
            input.addEventListener('input', function() {
                if (this.hasAttribute('required') && this.value.trim()) {
                    this.classList.remove('is-invalid');
                }
            });
        });

        function showError(message) {
            var errorAlert = document.getElementById('errorAlert');
            var errorMessage = document.getElementById('errorMessage');
            errorMessage.textContent = message;
            errorAlert.style.display = 'block';

            var successAlert = document.getElementById('successAlert');
            successAlert.style.display = 'none';
        }

        function showSuccess(message) {
            var successAlert = document.getElementById('successAlert');
            var successMessage = document.getElementById('successMessage');
            successMessage.textContent = message;
            successAlert.style.display = 'block';

            var errorAlert = document.getElementById('errorAlert');
            errorAlert.style.display = 'none';
        }

        function goToLogin() {
            // In real implementation, this would navigate to login page
            // Example: window.location.href = '@Url.Action("DangNhap", "User")';
            alert('Chuyển đến trang đăng nhập...');
        }

        // Add some interactive effects
        document.querySelectorAll('.form-control').forEach(function(input) {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'translateY(-2px)';
                this.parentElement.style.transition = 'transform 0.3s ease';
            });

            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'translateY(0)';
            });
        });
    </script>
</body>
